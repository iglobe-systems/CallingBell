{"version":3,"sources":["./src/app/pages/cust/add-asset/add-asset.page.html","./src/app/pages/cust/add-asset/add-asset.module.ts","./src/app/pages/cust/add-asset/add-asset.page.scss","./src/app/pages/cust/add-asset/add-asset.page.ts"],"names":[],"mappings":"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","file":"pages-cust-add-asset-add-asset-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n<ion-toolbar color=\\\"darkblue\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button color=\\\"light\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\t<div>\\r\\n\\t\\t<img src=\\\"assets/img/newlogov7.png\\\" class=\\\"header-logo\\\"/>\\r\\n\\t  </div>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n\\t<h2 class=\\\"header\\\">ASSET MANAGEMENT</h2>\\r\\n\\t<p class=\\\"header-sub\\\">You can add your household assets here!</p>\\r\\n\\t   <form [formGroup]=\\\"onAddAssetForm\\\">\\r\\n\\t\\t<ion-list lines=\\\"none\\\">\\r\\n\\t\\t<ion-item>\\r\\n\\t\\t\\t<ion-label position=\\\"floating\\\" class=\\\"fw600\\\">Product Category</ion-label>\\r\\n\\t\\t    <ion-select formControlName=\\\"productCategory\\\" interface=\\\"popover\\\" lines=\\\"none\\\" mode=\\\"ios\\\">\\r\\n\\t\\t            <ion-select-option >Entertainment</ion-select-option>\\r\\n\\t\\t    </ion-select>\\r\\n\\t\\t</ion-item>\\r\\n\\t\\t<ion-item>\\r\\n\\t\\t\\t<ion-label  position=\\\"floating\\\" class=\\\"fw600\\\">Product Name</ion-label>\\r\\n\\t\\t    <ion-input formControlName=\\\"productName\\\" type=\\\"text\\\"></ion-input>\\r\\n\\t\\t</ion-item>\\r\\n\\t\\t<ion-item>\\r\\n\\t\\t\\t<ion-label  position=\\\"floating\\\" class=\\\"fw600\\\">Product Serial No. (optional)</ion-label>\\r\\n\\t\\t\\t<ion-input formControlName=\\\"productSerialNo\\\" type=\\\"text\\\"></ion-input>\\r\\n\\t\\t</ion-item>\\r\\n\\t\\t<ion-item>\\r\\n\\t\\t\\t<ion-label  position=\\\"floating\\\" class=\\\"fw600\\\">Brand</ion-label>\\r\\n\\t\\t    <ion-input formControlName=\\\"productBrand\\\" type=\\\"text\\\"></ion-input>\\r\\n\\t\\t</ion-item>\\r\\n\\t\\t<ion-item>\\r\\n\\t\\t\\t<ion-label  position=\\\"floating\\\" class=\\\"fw600\\\">Date of Purchase</ion-label>\\r\\n\\t\\t    <ion-datetime placeholder=\\\"Select Date\\\" formControlName=\\\"dateOfPurchase\\\"></ion-datetime>\\r\\n\\t\\t</ion-item>\\r\\n\\t\\t<ion-item>\\r\\n\\t\\t\\t<ion-label  position=\\\"floating\\\" class=\\\"fw600\\\">Number of Months Warranty</ion-label>\\r\\n\\t\\t    <ion-input type=\\\"numeric\\\" formControlName=\\\"monthsWarranty\\\"></ion-input>\\r\\n\\t\\t</ion-item>\\r\\n\\t\\t<ion-item >\\r\\n\\t\\t\\t<ion-label position=\\\"floating\\\" class=\\\"fw600\\\" color=\\\"darkblue\\\">Product Price</ion-label>\\r\\n\\t\\t    <ion-input type=\\\"numeric\\\" placeholder=\\\"&#8377;\\\" formControlName=\\\"productPrice\\\"></ion-input>\\r\\n\\t\\t</ion-item>\\r\\n\\t</ion-list>\\r\\n\\t</form>\\r\\n\\t<div class=\\\"text-center\\\">\\r\\n\\t\\t<ion-button (click)=\\\"addAsset()\\\" color=\\\"gold\\\">SUBMIT FORM</ion-button>\\r\\n\\t</div>\\r\\n\\t<ion-list>\\r\\n\\t\\t<ion-item>\\r\\n\\t\\t\\t<ion-label position=\\\"stacked\\\" class=\\\"fw600\\\">Product Image</ion-label>\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<ion-button fill=\\\"outline\\\" color=\\\"darkblue\\\" class=\\\"buttonone\\\" size=\\\"small\\\"\\t(click)=\\\"openCam()\\\">Camera</ion-button>\\r\\n\\t\\t\\t\\t<ion-button fill=\\\"outline\\\" color=\\\"darkblue\\\" class=\\\"buttontwo\\\" size=\\\"small\\\">Gallery</ion-button>\\r\\n\\t\\t\\t\\t<ion-button fill=\\\"outline\\\" color=\\\"darkblue\\\" class=\\\"buttontwo\\\" size=\\\"small\\\" (click)=\\\"upload()\\\">Upload</ion-button>\\r\\n\\t\\t\\t\\t<img src=\\\"{{image}}\\\" onError=\\\"this.src='http://apiv1.iglobesystems.com/assets/img/no_img.png'\\\" class=\\\"asset-image\\\">  \\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</ion-item>\\r\\n\\t\\t<ion-item>\\r\\n\\t\\t\\t<ion-label position=\\\"stacked\\\" class=\\\"fw600\\\">Invoice Image</ion-label>\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<ion-button fill=\\\"outline\\\" color=\\\"darkblue\\\" class=\\\"buttonone\\\" size=\\\"small\\\">Camera</ion-button>\\r\\n\\t\\t\\t\\t<ion-button fill=\\\"outline\\\" color=\\\"darkblue\\\" class=\\\"buttontwo\\\" size=\\\"small\\\">Gallery</ion-button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</ion-item>\\r\\n\\t\\t<ion-item>\\r\\n\\t\\t\\t<ion-label position=\\\"stacked\\\" class=\\\"fw600\\\">Warranty Image</ion-label>\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<ion-button fill=\\\"outline\\\" color=\\\"darkblue\\\" class=\\\"buttonone\\\" size=\\\"small\\\">Camera</ion-button>\\r\\n\\t\\t\\t\\t<ion-button fill=\\\"outline\\\" color=\\\"darkblue\\\" class=\\\"buttontwo\\\" size=\\\"small\\\">Gallery</ion-button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</ion-item>\\r\\n\\t</ion-list>\\r\\n\\t\\t\\r\\n\\t\\r\\n\\t\\r\\n\\t\\r\\n\\t<!-- <h3 *ngIf=\\\"images.length == 0\\\" text-center>Please Select Image!</h3>\\r\\n \\r\\n\\t<ion-list>\\r\\n\\t  <ion-item *ngFor=\\\"let img of images; index as pos\\\" text-wrap>\\r\\n\\t\\t<ion-thumbnail slot=\\\"start\\\">\\r\\n\\t\\t  <ion-img [src]=\\\"img.path\\\"></ion-img>\\r\\n\\t\\t</ion-thumbnail>\\r\\n\\t\\t<ion-label>\\r\\n\\t\\t  {{ img.name }}\\r\\n\\t\\t</ion-label>\\r\\n\\t\\t<ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"startUpload(img)\\\">\\r\\n\\t\\t  <ion-icon slot=\\\"icon-only\\\" name=\\\"cloud-upload\\\"></ion-icon>\\r\\n\\t\\t</ion-button>\\r\\n\\t\\t<ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"deleteImage(img, pos)\\\">\\r\\n\\t\\t  <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\r\\n\\t\\t</ion-button>\\r\\n\\t  </ion-item>\\r\\n\\t</ion-list> -->\\r\\n</ion-content>\\r\\n\\r\\n<!-- <ion-footer>\\r\\n\\t<ion-toolbar color=\\\"primary\\\">\\r\\n\\t  <ion-button fill=\\\"clear\\\" expand=\\\"full\\\" color=\\\"light\\\" (click)=\\\"selectImage()\\\">\\r\\n\\t\\t<ion-icon slot=\\\"start\\\" name=\\\"camera\\\"></ion-icon>\\r\\n\\t\\tSelect Image</ion-button>\\r\\n\\t</ion-toolbar>\\r\\n  </ion-footer> -->\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddAssetPage } from './add-asset.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddAssetPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AddAssetPage]\n})\nexport class AddAssetPageModule {}\n","module.exports = \".header-logo {\\n  width: 120px;\\n  vertical-align: middle;\\n}\\n\\n.header {\\n  text-align: center;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 5px 0px;\\n}\\n\\n.header-sub {\\n  text-align: center;\\n  font-size: 12px;\\n  margin: 5px 0px;\\n}\\n\\nh5 {\\n  text-align: center;\\n  font-size: 1rem;\\n  font-weight: 600;\\n}\\n\\nion-item {\\n  border: 0.5px solid black;\\n  border-radius: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n.buttonone {\\n  margin: 10px 0px;\\n}\\n\\n.buttontwo {\\n  margin: 10px 20px;\\n}\\n\\n.asset-image {\\n  width: 80px;\\n  height: 80px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY3VzdC9hZGQtYXNzZXQvRDpcXFJpYXpcXE5ld0FQS1xcTmV3QVBLdjAuMS9zcmNcXGFwcFxccGFnZXNcXGN1c3RcXGFkZC1hc3NldFxcYWRkLWFzc2V0LnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvY3VzdC9hZGQtYXNzZXQvYWRkLWFzc2V0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7RUFDQSxzQkFBQTtBQ0NKOztBRENBO0VBQ0Msa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0FDRUQ7O0FEQ0E7RUFDQyxrQkFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0FDRUQ7O0FEQ0E7RUFDQyxrQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQ0VEOztBRENBO0VBQ0MseUJBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0FDRUQ7O0FEQ0E7RUFDQyxnQkFBQTtBQ0VEOztBREFBO0VBQ0MsaUJBQUE7QUNHRDs7QURBQTtFQUNDLFdBQUE7RUFDQSxZQUFBO0FDR0QiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9jdXN0L2FkZC1hc3NldC9hZGQtYXNzZXQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlci1sb2dve1xyXG4gICAgd2lkdGg6MTIwcHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcbi5oZWFkZXJ7XHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdGZvbnQtc2l6ZToxNHB4O1xyXG5cdGZvbnQtd2VpZ2h0OiA2MDA7XHJcblx0bWFyZ2luOiA1cHggMHB4O1xyXG59XHJcblxyXG4uaGVhZGVyLXN1YntcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0Zm9udC1zaXplOjEycHg7XHJcblx0bWFyZ2luOiA1cHggMHB4O1xyXG59XHJcblxyXG5oNXtcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0Zm9udC1zaXplOiAxcmVtO1xyXG5cdGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbmlvbi1pdGVte1xyXG5cdGJvcmRlcjowLjVweCBzb2xpZCBibGFjaztcclxuXHRib3JkZXItcmFkaXVzOjEwcHg7XHJcblx0bWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLmJ1dHRvbm9uZXtcclxuXHRtYXJnaW46IDEwcHggMHB4O1xyXG59XHJcbi5idXR0b250d297XHJcblx0bWFyZ2luOjEwcHggMjBweDtcclxufVxyXG5cclxuLmFzc2V0LWltYWdle1xyXG5cdHdpZHRoOiA4MHB4O1xyXG5cdGhlaWdodDogODBweDtcclxufVxyXG5cclxuIiwiLmhlYWRlci1sb2dvIHtcbiAgd2lkdGg6IDEyMHB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uaGVhZGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIG1hcmdpbjogNXB4IDBweDtcbn1cblxuLmhlYWRlci1zdWIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgbWFyZ2luOiA1cHggMHB4O1xufVxuXG5oNSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LXdlaWdodDogNjAwO1xufVxuXG5pb24taXRlbSB7XG4gIGJvcmRlcjogMC41cHggc29saWQgYmxhY2s7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5idXR0b25vbmUge1xuICBtYXJnaW46IDEwcHggMHB4O1xufVxuXG4uYnV0dG9udHdvIHtcbiAgbWFyZ2luOiAxMHB4IDIwcHg7XG59XG5cbi5hc3NldC1pbWFnZSB7XG4gIHdpZHRoOiA4MHB4O1xuICBoZWlnaHQ6IDgwcHg7XG59Il19 */\"","import { Component, OnInit, ChangeDetectorRef} from '@angular/core';\r\nimport { Camera, CameraOptions,PictureSourceType } from '@ionic-native/camera/ngx';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n  NavController,\r\n  AlertController,\r\n  MenuController,\r\n  ToastController,\r\n  PopoverController,\r\n  ModalController,\r\n  LoadingController,\r\n  ActionSheetController,\r\n  Platform\r\n} from '@ionic/angular';\r\n// import { File, FileEntry } from '@ionic-native/file/ngx';\r\nimport { HttpClientModule, HttpClient, HttpHeaders } from '@angular/common/http';\r\n// import { Observable } from 'rxjs/Observable';\r\n// import { NativeStorage } from '@ionic-native/native-storage/ngx';\r\n// import { WebView } from '@ionic-native/ionic-webview/ngx';\r\n// import { Storage } from '@ionic/storage';\r\n// import { FilePath } from '@ionic-native/file-path/ngx';\r\n// import { finalize } from 'rxjs/operators';\r\nimport { FileTransfer,FileUploadOptions,FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\n\r\n// const STORAGE_KEY = 'my_images';\r\n@Component({\r\n  selector: 'app-add-asset',\r\n  templateUrl: './add-asset.page.html',\r\n  styleUrls: ['./add-asset.page.scss'],\r\n})\r\nexport class AddAssetPage implements OnInit {\r\n  // userInfo: any;\r\n  image:any='';\r\n  imageData:any='';\r\n\r\n  // images = [];\r\n\r\n  public onAddAssetForm: FormGroup;\r\n  constructor(\r\n              private camera: Camera,\r\n              private transfer: FileTransfer,\r\n              // public authService: AuthService, \r\n              // public alertService: AlertService, \r\n              public loadingCtrl: LoadingController, \r\n              // public alertCtrl: AlertController, \r\n              // public navCtrl: NavController,\r\n              // public popoverCtrl: PopoverController,\r\n              // private router: Router,\r\n              public http: HttpClient,\r\n              private formBuilder: FormBuilder,\r\n              // private storage: Storage,\r\n              public toastController: ToastController,\r\n              // private file: File,\r\n              // private webview: WebView,\r\n              // private actionSheetController: ActionSheetController,\r\n              // private platform: Platform,\r\n              // private ref: ChangeDetectorRef,\r\n              // private filePath: FilePath\r\n              ) { }\r\n\r\n  ngOnInit() {\r\n    // this.platform.ready().then(() => {\r\n    //   this.loadStoredImages();\r\n    // });\r\n     this.onAddAssetForm = this.formBuilder.group({\r\n      'productCategory': [null, Validators.required],\r\n      'productName': [null, Validators.required],\r\n      'productSerialNo':[null, Validators.required],\r\n      'productBrand': [null, Validators.required],\r\n      'dateOfPurchase': [null, Validators.required],\r\n      'monthsWarranty': [null, Validators.required],\r\n      'productPrice': [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  addAsset(){\r\n    console.log(this.onAddAssetForm.value);\r\n  }\r\n\r\n  openCam(){\r\n\r\n    const options: CameraOptions = {\r\n      quality: 50,\r\n      destinationType: this.camera.DestinationType.FILE_URI,\r\n      encodingType: this.camera.EncodingType.JPEG,\r\n      mediaType: this.camera.MediaType.PICTURE\r\n    }\r\n    \r\n    this.camera.getPicture(options).then((imageData) => {\r\n     // imageData is either a base64 encoded string or a file URI\r\n     // If it's base64 (DATA_URL):\r\n     //alert(imageData)\r\n     this.imageData=imageData\r\n     this.image=(<any>window).Ionic.WebView.convertFileSrc(imageData);\r\n    }, (err) => {\r\n     // Handle error\r\n     alert(\"error \"+JSON.stringify(err))\r\n    });\r\n\r\n  }\r\n\r\n\r\n  async upload()\r\n  {\r\n    const loading = await this.loadingCtrl.create({\r\n      message: 'Uploading...',\r\n      });\r\n    await loading.present();\r\n\r\n    const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n    let options1: FileUploadOptions = {\r\n       fileKey: 'file',\r\n       fileName: 'name.jpg',\r\n       headers: {}\r\n    \r\n    }\r\n\r\nfileTransfer.upload(this.imageData, 'http://apiv1.iglobesystems.com:8000/api_v1/assets/add', options1)\r\n .then((data) => {\r\n   // success\r\n   loading.dismiss()\r\n   alert(\"success\");\r\n }, (err) => {\r\n   // error\r\n   alert(\"error\"+JSON.stringify(err));\r\n   loading.dismiss()\r\n });\r\n  }\r\n\r\n\r\n  // loadStoredImages() {\r\n  //   this.storage.get(STORAGE_KEY).then(images => {\r\n  //     if (images) {\r\n  //       let arr = JSON.parse(images);\r\n  //       this.images = [];\r\n  //       for (let img of arr) {\r\n  //         let filePath = this.file.dataDirectory + img;\r\n  //         let resPath = this.pathForImage(filePath);\r\n  //         this.images.push({ name: img, path: resPath, filePath: filePath });\r\n  //       }\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // pathForImage(img) {\r\n  //   if (img === null) {\r\n  //     return '';\r\n  //   } else {\r\n  //     let converted = this.webview.convertFileSrc(img);\r\n  //     return converted;\r\n  //   }\r\n  // }\r\n \r\n  // async presentToast(text) {\r\n  //   const toast = await this.toastController.create({\r\n  //       message: text,\r\n  //       position: 'bottom',\r\n  //       duration: 3000\r\n  //   });\r\n  //   toast.present();\r\n  // }\r\n\r\n  // async selectImage() {\r\n  //   const actionSheet = await this.actionSheetController.create({\r\n  //       header: \"Select Image source\",\r\n  //       buttons: [{\r\n  //               text: 'Load from Library',\r\n  //               handler: () => {\r\n  //                   this.takePicture(this.camera.PictureSourceType.PHOTOLIBRARY);\r\n  //               }\r\n  //           },\r\n  //           {\r\n  //               text: 'Use Camera',\r\n  //               handler: () => {\r\n  //                   this.takePicture(this.camera.PictureSourceType.CAMERA);\r\n  //               }\r\n  //           },\r\n  //           {\r\n  //               text: 'Cancel',\r\n  //               role: 'cancel'\r\n  //           }\r\n  //       ]\r\n  //   });\r\n  //   await actionSheet.present();\r\n  // }\r\n\r\n  // takePicture(sourceType: PictureSourceType) {\r\n  //   var options: CameraOptions = {\r\n  //       quality: 100,\r\n  //       sourceType: sourceType,\r\n  //       saveToPhotoAlbum: false,\r\n  //       correctOrientation: true\r\n  //   };\r\n \r\n  //   this.camera.getPicture(options).then(imagePath => {\r\n  //       if (this.platform.is('android') && sourceType === this.camera.PictureSourceType.PHOTOLIBRARY) {\r\n  //           this.filePath.resolveNativePath(imagePath)\r\n  //               .then(filePath => {\r\n  //                   let correctPath = filePath.substr(0, filePath.lastIndexOf('/') + 1);\r\n  //                   let currentName = imagePath.substring(imagePath.lastIndexOf('/') + 1, imagePath.lastIndexOf('?'));\r\n  //                   this.copyFileToLocalDir(correctPath, currentName, this.createFileName());\r\n  //               });\r\n  //       } else {\r\n  //           var currentName = imagePath.substr(imagePath.lastIndexOf('/') + 1);\r\n  //           var correctPath = imagePath.substr(0, imagePath.lastIndexOf('/') + 1);\r\n  //           this.copyFileToLocalDir(correctPath, currentName, this.createFileName());\r\n  //       }\r\n  //   });\r\n  // }\r\n\r\n  //   createFileName() {\r\n  //     var d = new Date(),\r\n  //         n = d.getTime(),\r\n  //         newFileName = n + \".jpg\";\r\n  //     return newFileName;\r\n  //     }\r\n\r\n  //   copyFileToLocalDir(namePath, currentName, newFileName) {\r\n  //     this.file.copyFile(namePath, currentName, this.file.dataDirectory, newFileName).then(success => {\r\n  //         this.updateStoredImages(newFileName);\r\n  //     }, error => {\r\n  //         this.presentToast('Error while storing file.');\r\n  //     });\r\n  //   }\r\n\r\n  //   updateStoredImages(name) {\r\n  //     console.log(name);\r\n  //     this.storage.get(STORAGE_KEY).then(images => {\r\n  //         let arr = JSON.parse(images);\r\n  //         if (!arr) {\r\n  //             let newImages = [name];\r\n  //             this.storage.set(STORAGE_KEY, JSON.stringify(newImages));\r\n  //         } else {\r\n  //             arr.push(name);\r\n  //             this.storage.set(STORAGE_KEY, JSON.stringify(arr));\r\n  //         }\r\n   \r\n  //         let filePath = this.file.dataDirectory + name;\r\n  //         let resPath = this.pathForImage(filePath);\r\n   \r\n  //         let newEntry = {\r\n  //             name: name,\r\n  //             path: resPath,\r\n  //             filePath: filePath\r\n  //         };\r\n   \r\n  //         this.images = [newEntry, ...this.images];\r\n  //         this.ref.detectChanges(); // trigger change detection cycle\r\n  //     });\r\n  // }\r\n\r\n  // deleteImage(imgEntry, position) {\r\n  //   this.images.splice(position, 1);\r\n \r\n  //   this.storage.get(STORAGE_KEY).then(images => {\r\n  //       let arr = JSON.parse(images);\r\n  //       let filtered = arr.filter(name => name != imgEntry.name);\r\n  //       this.storage.set(STORAGE_KEY, JSON.stringify(filtered));\r\n \r\n  //       var correctPath = imgEntry.filePath.substr(0, imgEntry.filePath.lastIndexOf('/') + 1);\r\n \r\n  //       this.file.removeFile(correctPath, imgEntry.name).then(res => {\r\n  //           this.presentToast('File removed.');\r\n  //       });\r\n  //   });\r\n  // }\r\n\r\n  // startUpload(imgEntry) {\r\n  //   console.log(imgEntry);\r\n  //   this.file.resolveLocalFilesystemUrl(imgEntry.filePath)\r\n  //       .then(entry => {\r\n  //           ( < FileEntry > entry).file(file => this.readFile(file))\r\n  //       })\r\n  //       .catch(err => {\r\n  //           this.presentToast('Error while reading file.');\r\n  //       });\r\n  //   }\r\n\r\n  //   readFile(file: any) {\r\n      \r\n      \r\n  //     const reader = new FileReader();\r\n  //     reader.onload = () => {\r\n  //       console.log('test');\r\n  //       // console.log(reader.result);\r\n  //         const formData = new FormData();\r\n  //         const imgBlob = new Blob([reader.result], {\r\n  //             type: file.type\r\n  //         });\r\n  //         console.log('test2');\r\n  //         formData.append('file', imgBlob, file.name);\r\n  //         console.log(imgBlob);\r\n  //         this.uploadImageData(formData);\r\n  //         console.log(formData);\r\n  //     };\r\n  //     reader.readAsArrayBuffer(file);\r\n  //   }\r\n\r\n  //   async uploadImageData(formData: FormData) {\r\n  //     console.log(formData);\r\n      \r\n  //     const loading = await this.loadingCtrl.create({\r\n  //         message: 'Uploading image...',\r\n  //     });\r\n  //     await loading.present();\r\n  //     console.log(formData);\r\n      \r\n  //     this.http.post(\"http://apiv1.iglobesystems.com:8000/api_v1/assets/add\", formData)\r\n  //         .pipe(\r\n  //             finalize(() => {\r\n  //               // console.log(formData);\r\n  //                 loading.dismiss();\r\n  //             })\r\n  //         )\r\n  //         .subscribe(res => {\r\n  //           // console.log(res);\r\n  //             if (res['success']) {\r\n  //                 this.presentToast('File upload complete.')\r\n  //             } else {\r\n  //                 this.presentToast('File upload failed.')\r\n  //             }\r\n  //         });\r\n  // }\r\n}\r\n"],"sourceRoot":""}